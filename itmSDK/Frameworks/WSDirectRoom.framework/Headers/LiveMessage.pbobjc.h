// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LiveMessage.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(AIYOU_G_P_B_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define AIYOU_G_P_B_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if AIYOU_G_P_B_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/AIYOU_G_P_BProtocolBuffers.h>
#else
 #import "AIYOU_G_P_BProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Comment;
@class LiveAddress;
@class LiveRoom;
@class MeetingUser;
@class PagePB;
@class fullUserInfo;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ECommandId

typedef AIYOU_G_P_B_ENUM(ECommandId) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ECommandId_AIYOU_G_P_BUnrecognizedEnumeratorValue = kAIYOU_G_P_BUnrecognizedEnumeratorValue,
  /** proto3:every enum definition must contain a constant that maps to zero as its first element */
  ECommandId_PublicNull = 0,

  /** 获取直播地址 */
  ECommandId_GetLiveAddress = 40001,

  /** 主播开始直播 */
  ECommandId_BeginLive = 40002,

  /** 直播停止直播 */
  ECommandId_EndLive = 40003,

  /** 获取直播列表 */
  ECommandId_LiveList = 40004,

  /** 看直播 */
  ECommandId_EnterLiveroom = 40005,

  /** 离开直播间 */
  ECommandId_LeaveLiveroom = 40006,

  /** 观众发表评论 */
  ECommandId_AddLiveComment = 40007,

  /** 推送给其他观众的评论 */
  ECommandId_LiveCommentToAudience = 40008,

  /** 推送给主播的评论 */
  ECommandId_LiveCommentToAnchor = 40009,

  /** 如果客户端发现直播间，不能正常播放，客户端上报，服务端将此直播间关闭 */
  ECommandId_ClientEndLive = 40010,

  /** 主播获取观众列表 */
  ECommandId_GetAudienceList = 40011,

  /** 主播设置某观众为嘉宾 */
  ECommandId_SetHonor = 40012,

  /** 主播取消设置某观众为嘉宾 */
  ECommandId_CancelHonor = 40013,

  /**
   * 视频会议
   * 发起视频会议：生成房间号，邀请码. 返回房间号，视频会议地址
   **/
  ECommandId_CreateVideoMeeting = 40014,

  /**
   * 1. 连接视频会议服务器成功。 确认加入视频会议。返回邀请码
   * 2. 进入视频会议成功,如果是游戏云直播模块断开重连
   **/
  ECommandId_JoinSuccessMeeting = 40015,

  /** 对视频会议邀请处理:确认加入，根据邀请码，返回房间号，视频会议地址。如果房间已满，则不能加入 */
  ECommandId_PreJoinMeeting = 40016,

  /** 退出视频会议 */
  ECommandId_LeftMeeting = 40017,

  /** 邀请好友看直播 */
  ECommandId_InvitationLive = 40018,

  /** 邀请好友视频会议 */
  ECommandId_InvitationMeeting = 40019,

  /** 视频会议中剔除某人,房主有此权限.被踢人会收到41004消息，则其需关闭视频会议视频流 */
  ECommandId_ExpelMeeting = 40020,

  /** 解散此视频会议 */
  ECommandId_DissolveMeeting = 40021,

  /** 查询视频会议成员 */
  ECommandId_GetMeetingMember = 40022,

  /** 设置视频会议模式：1语音互动，2视频互动 */
  ECommandId_SetMeetingMode = 40023,

  /** 申请连麦权限 */
  ECommandId_ApplyCommunication = 40024,

  /** 释放连麦权限 */
  ECommandId_ReleaseCommunication = 40025,

  /** 创建视频会议，带成员 */
  ECommandId_Commandid40026 = 40026,

  /** 加入视频会议,房间不存在，并创建 */
  ECommandId_Commandid40027 = 40027,

  /** 观众数变化时，通知主播 */
  ECommandId_MsgAudienceUpdate = 41000,

  /** 某个观众，获得嘉宾资格 */
  ECommandId_MsgGetHonor = 41001,

  /** 某个观众，被取消嘉宾资格 */
  ECommandId_MsgCancelHonor = 41002,

  /** 主播停止直播广播消息 */
  ECommandId_EndLiveBroadcast = 41003,

  /** 视频会议中被发起人踢掉,客户端收到此命令，需要断开和视频服务器连接 */
  ECommandId_MsgExpelMeeting = 41004,

  /** 视频会议发起人解散视频会议，客户端收到此命令，需要断开和视频服务器连接. 此消息发送给非发起人之外的其他在线视频会议玩家 */
  ECommandId_MsgDissolveMeeting = 41005,

  /** 视频会议成员数有变更 */
  ECommandId_MsgUpdateMeetingMember = 41006,

  /** 1 语音模式  2 视频模式 */
  ECommandId_MsgMeetingMode = 41007,

  /** 连麦权限通知 */
  ECommandId_MsgCommunicationPermission = 41008,

  /** 拉人视频会议通知 */
  ECommandId_MsgMeetingInvitation = 41009,
};

AIYOU_G_P_BEnumDescriptor *ECommandId_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ECommandId_IsValidValue(int32_t value);

#pragma mark - Enum ERtmessageStatus

typedef AIYOU_G_P_B_ENUM(ERtmessageStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ERtmessageStatus_AIYOU_G_P_BUnrecognizedEnumeratorValue = kAIYOU_G_P_BUnrecognizedEnumeratorValue,
  ERtmessageStatus_PublicForNull = 0,

  /** 成功 */
  ERtmessageStatus_Success = 200,

  /** 请求参数有误 */
  ERtmessageStatus_FailLiveId = -1,
};

AIYOU_G_P_BEnumDescriptor *ERtmessageStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ERtmessageStatus_IsValidValue(int32_t value);

#pragma mark - Enum Comment_MsgType

typedef AIYOU_G_P_B_ENUM(Comment_MsgType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Comment_MsgType_AIYOU_G_P_BUnrecognizedEnumeratorValue = kAIYOU_G_P_BUnrecognizedEnumeratorValue,
  Comment_MsgType_Text = 0,
  Comment_MsgType_Image = 1,
  Comment_MsgType_Audio = 2,
  Comment_MsgType_Video = 3,
  Comment_MsgType_Link = 4,
};

AIYOU_G_P_BEnumDescriptor *Comment_MsgType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Comment_MsgType_IsValidValue(int32_t value);

#pragma mark - Enum LiveRoom_Estatus

typedef AIYOU_G_P_B_ENUM(LiveRoom_Estatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  LiveRoom_Estatus_AIYOU_G_P_BUnrecognizedEnumeratorValue = kAIYOU_G_P_BUnrecognizedEnumeratorValue,
  LiveRoom_Estatus_Online = 0,
  LiveRoom_Estatus_Offline = 1,
};

AIYOU_G_P_BEnumDescriptor *LiveRoom_Estatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL LiveRoom_Estatus_IsValidValue(int32_t value);

#pragma mark - LiveMessageRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (AIYOU_G_P_BExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c AIYOU_G_P_BExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface LiveMessageRoot : AIYOU_G_P_BRootObject
@end

#pragma mark - Comment

typedef AIYOU_G_P_B_ENUM(Comment_FieldNumber) {
  Comment_FieldNumber_RoomId = 1,
  Comment_FieldNumber_MsgId = 2,
  Comment_FieldNumber_Fromuid = 3,
  Comment_FieldNumber_UserInfo = 4,
  Comment_FieldNumber_Message = 6,
  Comment_FieldNumber_MsgType = 7,
  Comment_FieldNumber_Time = 9,
  Comment_FieldNumber_Color = 10,
};

@interface Comment : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

/**
 * *
 * 本地msgid，校验使用
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgId;

/**
 * *
 * 发送方uid
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *fromuid;

/**
 * *
 * 发送方信息
 **/
@property(nonatomic, readwrite, strong, null_resettable) fullUserInfo *userInfo;
/** Test to see if @c userInfo has been set. */
@property(nonatomic, readwrite) BOOL hasUserInfo;

/**
 * *
 * 消息内容
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

/**
 * *
 * 消息类型
 **/
@property(nonatomic, readwrite) Comment_MsgType msgType;

/**
 * *
 * 时间戳
 **/
@property(nonatomic, readwrite) int64_t time;

/** 弹幕颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *color;

@end

/**
 * Fetches the raw value of a @c Comment's @c msgType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Comment_MsgType_RawValue(Comment *message);
/**
 * Sets the raw value of an @c Comment's @c msgType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetComment_MsgType_RawValue(Comment *message, int32_t value);

#pragma mark - LiveRoom

typedef AIYOU_G_P_B_ENUM(LiveRoom_FieldNumber) {
  LiveRoom_FieldNumber_RoomId = 1,
  LiveRoom_FieldNumber_Userinfo = 2,
  LiveRoom_FieldNumber_LiveAddress = 3,
  LiveRoom_FieldNumber_Status = 4,
  LiveRoom_FieldNumber_InteractAddr = 5,
};

@interface LiveRoom : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@property(nonatomic, readwrite, strong, null_resettable) fullUserInfo *userinfo;
/** Test to see if @c userinfo has been set. */
@property(nonatomic, readwrite) BOOL hasUserinfo;

@property(nonatomic, readwrite, strong, null_resettable) LiveAddress *liveAddress;
/** Test to see if @c liveAddress has been set. */
@property(nonatomic, readwrite) BOOL hasLiveAddress;

@property(nonatomic, readwrite) LiveRoom_Estatus status;

/** 连麦地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *interactAddr;

@end

/**
 * Fetches the raw value of a @c LiveRoom's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t LiveRoom_Status_RawValue(LiveRoom *message);
/**
 * Sets the raw value of an @c LiveRoom's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetLiveRoom_Status_RawValue(LiveRoom *message, int32_t value);

#pragma mark - LiveAddress

typedef AIYOU_G_P_B_ENUM(LiveAddress_FieldNumber) {
  LiveAddress_FieldNumber_LiveUpload = 1,
  LiveAddress_FieldNumber_LiveHls = 2,
  LiveAddress_FieldNumber_LiveRtmp = 3,
  LiveAddress_FieldNumber_LiveVod = 4,
};

@interface LiveAddress : AIYOU_G_P_BMessage

/** 直播上传地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *liveUpload;

/** HLS播放 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *liveHls;

/** RTMP播放 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *liveRtmp;

/** 点播地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *liveVod;

@end

#pragma mark - request_40001

/**
 * 查询直播地址
 **/
@interface request_40001 : AIYOU_G_P_BMessage

@end

#pragma mark - response_40001

typedef AIYOU_G_P_B_ENUM(response_40001_FieldNumber) {
  response_40001_FieldNumber_Result = 1,
  response_40001_FieldNumber_Message = 2,
  response_40001_FieldNumber_LiveRoom = 3,
};

@interface response_40001 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t result;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

@property(nonatomic, readwrite, strong, null_resettable) LiveRoom *liveRoom;
/** Test to see if @c liveRoom has been set. */
@property(nonatomic, readwrite) BOOL hasLiveRoom;

@end

#pragma mark - request_40002

/**
 * *
 * 开始直播
 **/
@interface request_40002 : AIYOU_G_P_BMessage

@end

#pragma mark - response_40002

typedef AIYOU_G_P_B_ENUM(response_40002_FieldNumber) {
  response_40002_FieldNumber_Result = 1,
  response_40002_FieldNumber_Message = 2,
};

@interface response_40002 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t result;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

@end

#pragma mark - request_40003

/**
 * *
 * 停止直播
 **/
@interface request_40003 : AIYOU_G_P_BMessage

@end

#pragma mark - response_40003

typedef AIYOU_G_P_B_ENUM(response_40003_FieldNumber) {
  response_40003_FieldNumber_Result = 1,
  response_40003_FieldNumber_Message = 2,
};

@interface response_40003 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t result;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

@end

#pragma mark - request_40004

typedef AIYOU_G_P_B_ENUM(request_40004_FieldNumber) {
  request_40004_FieldNumber_GameId = 1,
  request_40004_FieldNumber_Status = 2,
  request_40004_FieldNumber_PageNumber = 3,
  request_40004_FieldNumber_Size = 4,
};

/**
 * *
 * 获取游戏的直播间列表
 **/
@interface request_40004 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *gameId;

@property(nonatomic, readwrite) LiveRoom_Estatus status;

/** 当前查询页 */
@property(nonatomic, readwrite) int32_t pageNumber;

/** 每页显示数量 */
@property(nonatomic, readwrite) int32_t size;

@end

/**
 * Fetches the raw value of a @c request_40004's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t request_40004_Status_RawValue(request_40004 *message);
/**
 * Sets the raw value of an @c request_40004's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setrequest_40004_Status_RawValue(request_40004 *message, int32_t value);

#pragma mark - response_40004

typedef AIYOU_G_P_B_ENUM(response_40004_FieldNumber) {
  response_40004_FieldNumber_PageCount = 1,
  response_40004_FieldNumber_PageNumber = 2,
  response_40004_FieldNumber_RoomArray = 3,
};

@interface response_40004 : AIYOU_G_P_BMessage

/** 总页数 */
@property(nonatomic, readwrite) int32_t pageCount;

/** 当前页数 */
@property(nonatomic, readwrite) int32_t pageNumber;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LiveRoom*> *roomArray;
/** The number of items in @c roomArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger roomArray_Count;

@end

#pragma mark - request_40005

typedef AIYOU_G_P_B_ENUM(request_40005_FieldNumber) {
  request_40005_FieldNumber_RoomId = 1,
};

/**
 * *
 * 进入直播间
 **/
@interface request_40005 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@end

#pragma mark - response_40005

typedef AIYOU_G_P_B_ENUM(response_40005_FieldNumber) {
  response_40005_FieldNumber_Result = 1,
  response_40005_FieldNumber_Message = 2,
  response_40005_FieldNumber_LiveRoom = 3,
};

@interface response_40005 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t result;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

/** 直播间信息 */
@property(nonatomic, readwrite, strong, null_resettable) LiveRoom *liveRoom;
/** Test to see if @c liveRoom has been set. */
@property(nonatomic, readwrite) BOOL hasLiveRoom;

@end

#pragma mark - request_40006

typedef AIYOU_G_P_B_ENUM(request_40006_FieldNumber) {
  request_40006_FieldNumber_RoomId = 1,
};

/**
 * *
 * 离开直播间
 **/
@interface request_40006 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@end

#pragma mark - response_40006

@interface response_40006 : AIYOU_G_P_BMessage

@end

#pragma mark - request_40007

typedef AIYOU_G_P_B_ENUM(request_40007_FieldNumber) {
  request_40007_FieldNumber_Comment = 1,
};

/**
 * *
 * 观众 在直播间发表评论
 **/
@interface request_40007 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, strong, null_resettable) Comment *comment;
/** Test to see if @c comment has been set. */
@property(nonatomic, readwrite) BOOL hasComment;

@end

#pragma mark - response_40007

typedef AIYOU_G_P_B_ENUM(response_40007_FieldNumber) {
  response_40007_FieldNumber_Result = 1,
  response_40007_FieldNumber_Message = 2,
};

@interface response_40007 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t result;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

@end

#pragma mark - response_40008

typedef AIYOU_G_P_B_ENUM(response_40008_FieldNumber) {
  response_40008_FieldNumber_Comment = 1,
};

/**
 * *
 * 广播直播间评论
 **/
@interface response_40008 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, strong, null_resettable) Comment *comment;
/** Test to see if @c comment has been set. */
@property(nonatomic, readwrite) BOOL hasComment;

@end

#pragma mark - response_40009

typedef AIYOU_G_P_B_ENUM(response_40009_FieldNumber) {
  response_40009_FieldNumber_Comment = 1,
};

/**
 * *
 * 推送给主播的评论
 **/
@interface response_40009 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, strong, null_resettable) Comment *comment;
/** Test to see if @c comment has been set. */
@property(nonatomic, readwrite) BOOL hasComment;

@end

#pragma mark - request_40010

typedef AIYOU_G_P_B_ENUM(request_40010_FieldNumber) {
  request_40010_FieldNumber_RoomId = 1,
};

@interface request_40010 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@end

#pragma mark - request_40011

typedef AIYOU_G_P_B_ENUM(request_40011_FieldNumber) {
  request_40011_FieldNumber_RoomId = 1,
  request_40011_FieldNumber_PageNo = 2,
  request_40011_FieldNumber_PageSize = 3,
};

/**
 * 获取观众列表
 **/
@interface request_40011 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@property(nonatomic, readwrite) int32_t pageNo;

@property(nonatomic, readwrite) int32_t pageSize;

@end

#pragma mark - response_40011

typedef AIYOU_G_P_B_ENUM(response_40011_FieldNumber) {
  response_40011_FieldNumber_ResultCode = 1,
  response_40011_FieldNumber_ResultMessage = 2,
  response_40011_FieldNumber_AudiencesArray = 3,
  response_40011_FieldNumber_HonorsArray = 4,
  response_40011_FieldNumber_Page = 5,
};

@interface response_40011 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 观众集合 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<fullUserInfo*> *audiencesArray;
/** The number of items in @c audiencesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger audiencesArray_Count;

/** 嘉宾集合 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<fullUserInfo*> *honorsArray;
/** The number of items in @c honorsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger honorsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) PagePB *page;
/** Test to see if @c page has been set. */
@property(nonatomic, readwrite) BOOL hasPage;

@end

#pragma mark - request_40012

typedef AIYOU_G_P_B_ENUM(request_40012_FieldNumber) {
  request_40012_FieldNumber_RoomId = 1,
  request_40012_FieldNumber_ServerId = 2,
  request_40012_FieldNumber_TicketId = 3,
};

/**
 * 设置某观众为嘉宾
 **/
@interface request_40012 : AIYOU_G_P_BMessage

/** 直播房间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

/** 此用户游戏服 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *serverId;

/** 此用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ticketId;

@end

#pragma mark - response_40012

typedef AIYOU_G_P_B_ENUM(response_40012_FieldNumber) {
  response_40012_FieldNumber_ResultCode = 1,
  response_40012_FieldNumber_ResultMessage = 2,
  response_40012_FieldNumber_HonorsArray = 3,
};

@interface response_40012 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 当前嘉宾 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<fullUserInfo*> *honorsArray;
/** The number of items in @c honorsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger honorsArray_Count;

@end

#pragma mark - request_40013

typedef AIYOU_G_P_B_ENUM(request_40013_FieldNumber) {
  request_40013_FieldNumber_RoomId = 1,
  request_40013_FieldNumber_ServerId = 2,
  request_40013_FieldNumber_TicketId = 3,
};

/**
 * 取消某观众为嘉宾
 **/
@interface request_40013 : AIYOU_G_P_BMessage

/** 直播房间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

/** 此用户游戏服 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *serverId;

/** 此用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ticketId;

@end

#pragma mark - response_40013

typedef AIYOU_G_P_B_ENUM(response_40013_FieldNumber) {
  response_40013_FieldNumber_ResultCode = 1,
  response_40013_FieldNumber_ResultMessage = 2,
  response_40013_FieldNumber_HonorsArray = 3,
};

@interface response_40013 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 当前嘉宾 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<fullUserInfo*> *honorsArray;
/** The number of items in @c honorsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger honorsArray_Count;

@end

#pragma mark - response_41000

typedef AIYOU_G_P_B_ENUM(response_41000_FieldNumber) {
  response_41000_FieldNumber_Flag = 1,
  response_41000_FieldNumber_TotalNum = 2,
  response_41000_FieldNumber_ServerId = 3,
  response_41000_FieldNumber_TicketId = 4,
  response_41000_FieldNumber_Userinfo = 5,
};

@interface response_41000 : AIYOU_G_P_BMessage

/** true 观众增加，false 观众减少 */
@property(nonatomic, readwrite) BOOL flag;

/** 观众总数 */
@property(nonatomic, readwrite) int32_t totalNum;

/** 观众所在服 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *serverId;

/** 观众ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ticketId;

/** 此观众详细信息 */
@property(nonatomic, readwrite, strong, null_resettable) fullUserInfo *userinfo;
/** Test to see if @c userinfo has been set. */
@property(nonatomic, readwrite) BOOL hasUserinfo;

@end

#pragma mark - MeetingUser

typedef AIYOU_G_P_B_ENUM(MeetingUser_FieldNumber) {
  MeetingUser_FieldNumber_MeetingId = 1,
  MeetingUser_FieldNumber_Userinfo = 2,
  MeetingUser_FieldNumber_Landlord = 3,
};

@interface MeetingUser : AIYOU_G_P_BMessage

/** 房间内ID */
@property(nonatomic, readwrite) int32_t meetingId;

@property(nonatomic, readwrite, strong, null_resettable) fullUserInfo *userinfo;
/** Test to see if @c userinfo has been set. */
@property(nonatomic, readwrite) BOOL hasUserinfo;

/** 是否是发起人 */
@property(nonatomic, readwrite) BOOL landlord;

@end

#pragma mark - request_40014

typedef AIYOU_G_P_B_ENUM(request_40014_FieldNumber) {
  request_40014_FieldNumber_RoomNo = 1,
};

/**
 * 发起视频会议
 **/
@interface request_40014 : AIYOU_G_P_BMessage

/** 可选的房间号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomNo;

@end

#pragma mark - response_40014

typedef AIYOU_G_P_B_ENUM(response_40014_FieldNumber) {
  response_40014_FieldNumber_ResultCode = 1,
  response_40014_FieldNumber_ResultMessage = 2,
  response_40014_FieldNumber_MeetingRoomNo = 3,
  response_40014_FieldNumber_MeetingURL = 4,
  response_40014_FieldNumber_MeetingId = 5,
  response_40014_FieldNumber_LandLord = 6,
  response_40014_FieldNumber_MeetingState = 7,
  response_40014_FieldNumber_InvitationCode = 8,
};

@interface response_40014 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 视频会议房间号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingRoomNo;

/** 视频会议地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingURL;

/** 房间内ID */
@property(nonatomic, readwrite) int32_t meetingId;

/** 是否发起人 */
@property(nonatomic, readwrite) BOOL landLord;

/** 房间状态 0:准备，1：语音互动,2：视频互动 */
@property(nonatomic, readwrite) int32_t meetingState;

/** 邀请码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *invitationCode;

@end

#pragma mark - request_40026

typedef AIYOU_G_P_B_ENUM(request_40026_FieldNumber) {
  request_40026_FieldNumber_UsersArray = 1,
  request_40026_FieldNumber_MeetingNo = 2,
};

/**
 * 创建视频会议，带成员
 **/
@interface request_40026 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingNo;

/** 被邀请进视频会议的成员 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *usersArray;
/** The number of items in @c usersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger usersArray_Count;

@end

#pragma mark - response_40026

typedef AIYOU_G_P_B_ENUM(response_40026_FieldNumber) {
  response_40026_FieldNumber_ResultCode = 1,
  response_40026_FieldNumber_ResultMessage = 2,
  response_40026_FieldNumber_MeetingRoomNo = 3,
  response_40026_FieldNumber_MeetingURL = 4,
  response_40026_FieldNumber_MeetingState = 5,
  response_40026_FieldNumber_InvitationCode = 6,
  response_40026_FieldNumber_MeetingUsersArray = 7,
  response_40026_FieldNumber_UsersArray = 8,
};

@interface response_40026 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 视频会议房间号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingRoomNo;

/** 视频会议地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingURL;

/** 房间状态 0:准备，1：语音互动,2：视频互动 */
@property(nonatomic, readwrite) int32_t meetingState;

/** 邀请码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *invitationCode;

/** 房间成员：房间内ID */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MeetingUser*> *meetingUsersArray;
/** The number of items in @c meetingUsersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger meetingUsersArray_Count;

/** 没有进入房间的用户 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *usersArray;
/** The number of items in @c usersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger usersArray_Count;

@end

#pragma mark - request_40027

typedef AIYOU_G_P_B_ENUM(request_40027_FieldNumber) {
  request_40027_FieldNumber_MeetingRoomNo = 1,
};

/**
 * 加入视频会议,视频会议房间不存在，则创建
 **/
@interface request_40027 : AIYOU_G_P_BMessage

/** 视频会议房间号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingRoomNo;

@end

#pragma mark - response_40027

typedef AIYOU_G_P_B_ENUM(response_40027_FieldNumber) {
  response_40027_FieldNumber_ResultCode = 1,
  response_40027_FieldNumber_ResultMessage = 2,
  response_40027_FieldNumber_MeetingRoomNo = 3,
  response_40027_FieldNumber_MeetingURL = 4,
  response_40027_FieldNumber_MeetingState = 5,
  response_40027_FieldNumber_InvitationCode = 6,
  response_40027_FieldNumber_MeetingUserArray = 7,
};

@interface response_40027 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 视频会议房间号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingRoomNo;

/** 视频会议地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingURL;

/** 房间状态 0:准备，1：语音互动,2：视频互动 */
@property(nonatomic, readwrite) int32_t meetingState;

/** 邀请码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *invitationCode;

/** 房间成员：房间内ID */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MeetingUser*> *meetingUserArray;
/** The number of items in @c meetingUserArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger meetingUserArray_Count;

@end

#pragma mark - request_40015

typedef AIYOU_G_P_B_ENUM(request_40015_FieldNumber) {
  request_40015_FieldNumber_MeetingRoomNo = 1,
};

/**
 * 连接视频会议服务器成功。 确认加入视频会议。返回邀请码
 **/
@interface request_40015 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingRoomNo;

@end

#pragma mark - response_40015

typedef AIYOU_G_P_B_ENUM(response_40015_FieldNumber) {
  response_40015_FieldNumber_ResultCode = 1,
  response_40015_FieldNumber_ResultMessage = 2,
  response_40015_FieldNumber_InvitationCode = 3,
  response_40015_FieldNumber_InviteWaitTime = 4,
};

@interface response_40015 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 邀请码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *invitationCode;

/** 发送邀请等待加入时间,如果超时没有加入，则将等待窗口去掉 */
@property(nonatomic, readwrite) int32_t inviteWaitTime;

@end

#pragma mark - request_40016

typedef AIYOU_G_P_B_ENUM(request_40016_FieldNumber) {
  request_40016_FieldNumber_InvitationCode = 1,
};

@interface request_40016 : AIYOU_G_P_BMessage

/** 邀请码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *invitationCode;

@end

#pragma mark - response_40016

typedef AIYOU_G_P_B_ENUM(response_40016_FieldNumber) {
  response_40016_FieldNumber_ResultCode = 1,
  response_40016_FieldNumber_ResultMessage = 2,
  response_40016_FieldNumber_MeetingRoomNo = 3,
  response_40016_FieldNumber_MeetingURL = 4,
  response_40016_FieldNumber_MeetingId = 5,
  response_40016_FieldNumber_LandLord = 6,
  response_40016_FieldNumber_MeetingState = 7,
};

@interface response_40016 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** //视频会议房间号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingRoomNo;

/** 视频会议地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingURL;

/** 房间内ID */
@property(nonatomic, readwrite) int32_t meetingId;

/** 是否发起人 */
@property(nonatomic, readwrite) BOOL landLord;

/** 房间状态 0:准备，1：语音互动,2：视频互动 */
@property(nonatomic, readwrite) int32_t meetingState;

@end

#pragma mark - request_40017

/**
 * 退出视频会议
 **/
@interface request_40017 : AIYOU_G_P_BMessage

@end

#pragma mark - response_40017

typedef AIYOU_G_P_B_ENUM(response_40017_FieldNumber) {
  response_40017_FieldNumber_ResultCode = 1,
  response_40017_FieldNumber_ResultMessage = 2,
};

@interface response_40017 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

@end

#pragma mark - request_40018

typedef AIYOU_G_P_B_ENUM(request_40018_FieldNumber) {
  request_40018_FieldNumber_RoomId = 1,
  request_40018_FieldNumber_TicketIdsArray = 2,
};

/**
 * 邀请好友看直播
 **/
@interface request_40018 : AIYOU_G_P_BMessage

/** 自己的直播房间号. 收到此消息后调用40005 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

/** 好友ID */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *ticketIdsArray;
/** The number of items in @c ticketIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger ticketIdsArray_Count;

@end

#pragma mark - response_40018

typedef AIYOU_G_P_B_ENUM(response_40018_FieldNumber) {
  response_40018_FieldNumber_ResultCode = 1,
  response_40018_FieldNumber_ResultMessage = 2,
};

@interface response_40018 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

@end

#pragma mark - request_40019

typedef AIYOU_G_P_B_ENUM(request_40019_FieldNumber) {
  request_40019_FieldNumber_InvitationCode = 1,
  request_40019_FieldNumber_TicketIdsArray = 2,
};

/**
 * 邀请好友看直播
 **/
@interface request_40019 : AIYOU_G_P_BMessage

/** 邀请好友视频会议。收到此消息后调用40016 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *invitationCode;

/** 好友ID */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *ticketIdsArray;
/** The number of items in @c ticketIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger ticketIdsArray_Count;

@end

#pragma mark - response_40019

typedef AIYOU_G_P_B_ENUM(response_40019_FieldNumber) {
  response_40019_FieldNumber_ResultCode = 1,
  response_40019_FieldNumber_ResultMessage = 2,
};

@interface response_40019 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

@end

#pragma mark - request_40020

typedef AIYOU_G_P_B_ENUM(request_40020_FieldNumber) {
  request_40020_FieldNumber_MeetingRoomNo = 1,
  request_40020_FieldNumber_TicketId = 2,
};

/**
 * 视频会议群主踢人
 **/
@interface request_40020 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingRoomNo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ticketId;

@end

#pragma mark - response_40020

typedef AIYOU_G_P_B_ENUM(response_40020_FieldNumber) {
  response_40020_FieldNumber_ResultCode = 1,
  response_40020_FieldNumber_ResultMessage = 2,
  response_40020_FieldNumber_TicketId = 3,
};

@interface response_40020 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ticketId;

@end

#pragma mark - request_40021

typedef AIYOU_G_P_B_ENUM(request_40021_FieldNumber) {
  request_40021_FieldNumber_MeetingRoomNo = 1,
};

/**
 * 视频会议解散
 **/
@interface request_40021 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingRoomNo;

@end

#pragma mark - response_40021

typedef AIYOU_G_P_B_ENUM(response_40021_FieldNumber) {
  response_40021_FieldNumber_ResultCode = 1,
  response_40021_FieldNumber_ResultMessage = 2,
};

@interface response_40021 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

@end

#pragma mark - request_40022

typedef AIYOU_G_P_B_ENUM(request_40022_FieldNumber) {
  request_40022_FieldNumber_MeetingRoomNo = 1,
};

/**
 * 查询视频会议成员
 **/
@interface request_40022 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingRoomNo;

@end

#pragma mark - response_40022

typedef AIYOU_G_P_B_ENUM(response_40022_FieldNumber) {
  response_40022_FieldNumber_ResultCode = 1,
  response_40022_FieldNumber_ResultMessage = 2,
  response_40022_FieldNumber_UserListArray = 3,
};

@interface response_40022 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MeetingUser*> *userListArray;
/** The number of items in @c userListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userListArray_Count;

@end

#pragma mark - request_40023

typedef AIYOU_G_P_B_ENUM(request_40023_FieldNumber) {
  request_40023_FieldNumber_MeetingRoomNo = 1,
  request_40023_FieldNumber_MeetingState = 2,
};

/**
 * 设置视频会议模式：1语音互动，2视频互动
 **/
@interface request_40023 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingRoomNo;

@property(nonatomic, readwrite) int32_t meetingState;

@end

#pragma mark - response_40023

typedef AIYOU_G_P_B_ENUM(response_40023_FieldNumber) {
  response_40023_FieldNumber_ResultCode = 1,
  response_40023_FieldNumber_ResultMessage = 2,
  response_40023_FieldNumber_MeetingRoomNo = 3,
  response_40023_FieldNumber_MeetingState = 4,
};

@interface response_40023 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingRoomNo;

@property(nonatomic, readwrite) int32_t meetingState;

@end

#pragma mark - request_40024

typedef AIYOU_G_P_B_ENUM(request_40024_FieldNumber) {
  request_40024_FieldNumber_RoomId = 1,
};

/**
 * 申请连麦权限
 **/
@interface request_40024 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@end

#pragma mark - response_40024

typedef AIYOU_G_P_B_ENUM(response_40024_FieldNumber) {
  response_40024_FieldNumber_ResultCode = 1,
  response_40024_FieldNumber_ResultMessage = 2,
  response_40024_FieldNumber_RoomId = 3,
  response_40024_FieldNumber_Flag = 4,
};

@interface response_40024 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

/** true申请成功 false申请失败 */
@property(nonatomic, readwrite) BOOL flag;

@end

#pragma mark - request_40025

typedef AIYOU_G_P_B_ENUM(request_40025_FieldNumber) {
  request_40025_FieldNumber_RoomId = 1,
};

/**
 * 释放连麦权限
 **/
@interface request_40025 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@end

#pragma mark - response_40025

typedef AIYOU_G_P_B_ENUM(response_40025_FieldNumber) {
  response_40025_FieldNumber_ResultCode = 1,
  response_40025_FieldNumber_ResultMessage = 2,
  response_40025_FieldNumber_RoomId = 3,
};

@interface response_40025 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@end

#pragma mark - response_41004

typedef AIYOU_G_P_B_ENUM(response_41004_FieldNumber) {
  response_41004_FieldNumber_MeetingRoomNo = 1,
};

@interface response_41004 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingRoomNo;

@end

#pragma mark - response_41005

typedef AIYOU_G_P_B_ENUM(response_41005_FieldNumber) {
  response_41005_FieldNumber_MeetingRoomNo = 1,
};

@interface response_41005 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingRoomNo;

@end

#pragma mark - response_41006

typedef AIYOU_G_P_B_ENUM(response_41006_FieldNumber) {
  response_41006_FieldNumber_Flag = 1,
  response_41006_FieldNumber_Userinfo = 2,
};

/**
 * 视频会议成员数有变更
 **/
@interface response_41006 : AIYOU_G_P_BMessage

/** true 新增成员，false 离开成员 */
@property(nonatomic, readwrite) BOOL flag;

/** 成员信息 */
@property(nonatomic, readwrite, strong, null_resettable) MeetingUser *userinfo;
/** Test to see if @c userinfo has been set. */
@property(nonatomic, readwrite) BOOL hasUserinfo;

@end

#pragma mark - response_41007

typedef AIYOU_G_P_B_ENUM(response_41007_FieldNumber) {
  response_41007_FieldNumber_MeetingRoomNo = 1,
  response_41007_FieldNumber_MeetingState = 2,
};

/**
 * 视频会议发起人设置视频会议模式后，其他人参与人员接收此消息
 **/
@interface response_41007 : AIYOU_G_P_BMessage

/** 视频会议房间号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingRoomNo;

/** 1语音互动，2视频互动 */
@property(nonatomic, readwrite) int32_t meetingState;

@end

#pragma mark - response_41008

typedef AIYOU_G_P_B_ENUM(response_41008_FieldNumber) {
  response_41008_FieldNumber_RoomId = 1,
  response_41008_FieldNumber_Flag = 2,
  response_41008_FieldNumber_TicketId = 3,
};

/**
 * 当嘉宾收到此消息后：TRUE 可以申请连麦 false 不能申请连麦
 **/
@interface response_41008 : AIYOU_G_P_BMessage

/** 视频会议房间号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

/** true 可以申请权限 false 不可以申请 */
@property(nonatomic, readwrite) BOOL flag;

/** 主播收到此消息，添加，取消小喇叭 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ticketId;

@end

#pragma mark - response_41009

typedef AIYOU_G_P_B_ENUM(response_41009_FieldNumber) {
  response_41009_FieldNumber_InvitationCode = 1,
  response_41009_FieldNumber_UsersArray = 2,
  response_41009_FieldNumber_MeetingNo = 3,
};

/**
 * 拉人视频会议
 **/
@interface response_41009 : AIYOU_G_P_BMessage

/** 邀请码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *invitationCode;

/** 房间号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *meetingNo;

/** 视频会议成员 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MeetingUser*> *usersArray;
/** The number of items in @c usersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger usersArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
