// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BigTalkMessage.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(AIYOU_G_P_B_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define AIYOU_G_P_B_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if AIYOU_G_P_B_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/AIYOU_G_P_BProtocolBuffers.h>
#else
 #import "AIYOU_G_P_BProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BaseUserInfo;
@class Chat;
@class PagePB;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum BigTalkCommand

typedef AIYOU_G_P_B_ENUM(BigTalkCommand) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  BigTalkCommand_AIYOU_G_P_BUnrecognizedEnumeratorValue = kAIYOU_G_P_BUnrecognizedEnumeratorValue,
  BigTalkCommand_UnUsed = 0,

  /** 响应成功 */
  BigTalkCommand_Success = 200,

  /** 响应失败 */
  BigTalkCommand_Fail = -200,

  /** 功能未开放 */
  BigTalkCommand_FailFnNotOpen = 189,

  /** 发送P2P消息 */
  BigTalkCommand_Rt10000 = 10000,

  /** 接收P2P消息 */
  BigTalkCommand_Rt10002 = 10002,

  /** P2P历史消息 */
  BigTalkCommand_Rt10003 = 10003,

  /** 发送世界聊天 */
  BigTalkCommand_Rt12000 = 12000,

  /** 接收世界聊天 */
  BigTalkCommand_Rt12002 = 12002,

  /** 世界聊天历史消息 */
  BigTalkCommand_Rt12003 = 12003,

  /** 发送公会消息 */
  BigTalkCommand_Rt13000 = 13000,

  /** 接收公会消息 */
  BigTalkCommand_Rt13001 = 13001,

  /** 公会历史消息查询 */
  BigTalkCommand_Rt13002 = 13002,

  /** 发送群组聊天消息 */
  BigTalkCommand_Rt14000 = 14000,

  /** 接收群组聊天消息 */
  BigTalkCommand_Rt14001 = 14001,

  /** 群组聊天历史消息 */
  BigTalkCommand_Rt14002 = 14002,

  /** 创建群组聊天 */
  BigTalkCommand_Rt14003 = 14003,

  /** 拉人进群组,群组成员都可以邀请她人进入群组。无需对方同意。 */
  BigTalkCommand_Rt14004 = 14004,

  /** 退出群组,群组成员都可以退出群组 */
  BigTalkCommand_Rt14005 = 14005,

  /** 群组踢人，创建群组的人可以提其他成员 */
  BigTalkCommand_Rt14006 = 14006,

  /** 解散群组,创建群组的人可以解散群组 */
  BigTalkCommand_Rt14007 = 14007,

  /** 查询群组成员 */
  BigTalkCommand_Rt14008 = 14008,

  /** 修改群聊名称 */
  BigTalkCommand_Rt14009 = 14009,

  /** 查询我的群组 */
  BigTalkCommand_Rt14010 = 14010,

  /** 邀请进群通知。谁邀请了谁进群。发给所有群成员 */
  BigTalkCommand_Msg14011 = 14011,

  /** 退群通知。谁退群了 */
  BigTalkCommand_Msg14012 = 14012,

  /** 群解散通知 */
  BigTalkCommand_Msg14013 = 14013,

  /** 群名称改变通知 */
  BigTalkCommand_Msg14014 = 14014,

  /** 加入群组 */
  BigTalkCommand_Rt14015 = 14015,

  /** 查询离线消息 */
  BigTalkCommand_Rt15000 = 15000,

  /** 举报用户 */
  BigTalkCommand_Rt15001 = 15001,
};

AIYOU_G_P_BEnumDescriptor *BigTalkCommand_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL BigTalkCommand_IsValidValue(int32_t value);

#pragma mark - Enum Chat_MsgType

typedef AIYOU_G_P_B_ENUM(Chat_MsgType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Chat_MsgType_AIYOU_G_P_BUnrecognizedEnumeratorValue = kAIYOU_G_P_BUnrecognizedEnumeratorValue,
  Chat_MsgType_Text = 0,
  Chat_MsgType_Image = 1,
  Chat_MsgType_Audio = 2,
  Chat_MsgType_Video = 3,
  Chat_MsgType_Link = 4,
};

AIYOU_G_P_BEnumDescriptor *Chat_MsgType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Chat_MsgType_IsValidValue(int32_t value);

#pragma mark - Enum RichText_RichTextType

typedef AIYOU_G_P_B_ENUM(RichText_RichTextType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RichText_RichTextType_AIYOU_G_P_BUnrecognizedEnumeratorValue = kAIYOU_G_P_BUnrecognizedEnumeratorValue,
  /** 网页 */
  RichText_RichTextType_WebPage = 0,

  /** 指令 */
  RichText_RichTextType_Command = 1,
};

AIYOU_G_P_BEnumDescriptor *RichText_RichTextType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RichText_RichTextType_IsValidValue(int32_t value);

#pragma mark - Enum request_15001_ReportType

typedef AIYOU_G_P_B_ENUM(request_15001_ReportType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  request_15001_ReportType_AIYOU_G_P_BUnrecognizedEnumeratorValue = kAIYOU_G_P_BUnrecognizedEnumeratorValue,
  /** 色情 */
  request_15001_ReportType_Sexy = 0,

  /** 辱骂 */
  request_15001_ReportType_Abuse = 1,

  /** 其他 */
  request_15001_ReportType_Other = 2,
};

AIYOU_G_P_BEnumDescriptor *request_15001_ReportType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL request_15001_ReportType_IsValidValue(int32_t value);

#pragma mark - BigTalkMessageRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (AIYOU_G_P_BExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c AIYOU_G_P_BExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface BigTalkMessageRoot : AIYOU_G_P_BRootObject
@end

#pragma mark - Chat

typedef AIYOU_G_P_B_ENUM(Chat_FieldNumber) {
  Chat_FieldNumber_MsgId = 1,
  Chat_FieldNumber_MsgType = 2,
  Chat_FieldNumber_FromTicketId = 3,
  Chat_FieldNumber_FromNickName = 4,
  Chat_FieldNumber_FromIcon = 5,
  Chat_FieldNumber_ToTicketId = 6,
  Chat_FieldNumber_Message = 7,
  Chat_FieldNumber_CallTicketIdsArray = 8,
  Chat_FieldNumber_Time = 9,
  Chat_FieldNumber_SoundTime = 10,
  Chat_FieldNumber_Thumbnail = 11,
};

/**
 * *
 * 消息对象
 **/
@interface Chat : AIYOU_G_P_BMessage

/**
 * *
 * 本地msgid，校验使用
 * 比如发送失败，可以重发此消息
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgId;

/**
 * *
 * 消息类型
 **/
@property(nonatomic, readwrite) Chat_MsgType msgType;

/**
 * *
 * 发送方uid
 * 每个消息都需要注明发送者。尤其是世界聊天，群聊
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *fromTicketId;

/**
 * *
 *  昵称
 *  发送者昵称
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *fromNickName;

/**
 * *
 * 头像索引
 * 发送者头像
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *fromIcon;

/**
 * *
 * 接收方uid
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *toTicketId;

/**
 * *
 * 消息内容
 * 消息类型为text时，文本消息
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

/** 缩略图地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *thumbnail;

/**
 * *
 * 群聊时，被\@成员集合
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *callTicketIdsArray;
/** The number of items in @c callTicketIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger callTicketIdsArray_Count;

/**
 * *
 * 时间戳
 **/
@property(nonatomic, readwrite) int64_t time;

/**
 * *
 * 音频时间
 **/
@property(nonatomic, readwrite) int32_t soundTime;

@end

/**
 * Fetches the raw value of a @c Chat's @c msgType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Chat_MsgType_RawValue(Chat *message);
/**
 * Sets the raw value of an @c Chat's @c msgType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetChat_MsgType_RawValue(Chat *message, int32_t value);

#pragma mark - RichText

typedef AIYOU_G_P_B_ENUM(RichText_FieldNumber) {
  RichText_FieldNumber_Type = 1,
  RichText_FieldNumber_Title = 2,
  RichText_FieldNumber_Description_p = 3,
  RichText_FieldNumber_URL = 4,
  RichText_FieldNumber_Paras = 5,
  RichText_FieldNumber_CommandId = 6,
};

@interface RichText : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) RichText_RichTextType type;

/** 标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** 网页地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 参数 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *paras;
/** The number of items in @c paras without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger paras_Count;

/** 命令ID */
@property(nonatomic, readwrite) int32_t commandId;

@end

/**
 * Fetches the raw value of a @c RichText's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RichText_Type_RawValue(RichText *message);
/**
 * Sets the raw value of an @c RichText's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRichText_Type_RawValue(RichText *message, int32_t value);

#pragma mark - request_10000

typedef AIYOU_G_P_B_ENUM(request_10000_FieldNumber) {
  request_10000_FieldNumber_Message = 1,
};

/**
 * *
 * 客户端发送P2P消息
 **/
@interface request_10000 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, strong, null_resettable) Chat *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

#pragma mark - response_10000

typedef AIYOU_G_P_B_ENUM(response_10000_FieldNumber) {
  response_10000_FieldNumber_Result = 1,
  response_10000_FieldNumber_Message = 2,
  response_10000_FieldNumber_MsgId = 3,
  response_10000_FieldNumber_Time = 4,
};

@interface response_10000 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t result;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

@property(nonatomic, readwrite, copy, null_resettable) NSString *msgId;

/** 发送时间 */
@property(nonatomic, readwrite) int64_t time;

@end

#pragma mark - response_10002

typedef AIYOU_G_P_B_ENUM(response_10002_FieldNumber) {
  response_10002_FieldNumber_Message = 1,
};

/**
 * 接收P2P消息
 **/
@interface response_10002 : AIYOU_G_P_BMessage

/** P2P聊天体 */
@property(nonatomic, readwrite, strong, null_resettable) Chat *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

#pragma mark - request_10003

typedef AIYOU_G_P_B_ENUM(request_10003_FieldNumber) {
  request_10003_FieldNumber_Other = 1,
  request_10003_FieldNumber_StartTime = 2,
  request_10003_FieldNumber_EndTime = 3,
  request_10003_FieldNumber_PagePb = 4,
};

/**
 * *
 * 拉取私聊历史消息
 **/
@interface request_10003 : AIYOU_G_P_BMessage

/** 聊天人 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *other;

/** 会话查询开始时间 */
@property(nonatomic, readwrite) int64_t startTime;

/** 会话查询结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

/** 分页 */
@property(nonatomic, readwrite, strong, null_resettable) PagePB *pagePb;
/** Test to see if @c pagePb has been set. */
@property(nonatomic, readwrite) BOOL hasPagePb;

@end

#pragma mark - response_10003

typedef AIYOU_G_P_B_ENUM(response_10003_FieldNumber) {
  response_10003_FieldNumber_ResultCode = 1,
  response_10003_FieldNumber_ResultMessage = 2,
  response_10003_FieldNumber_MessageArray = 3,
  response_10003_FieldNumber_PagePb = 4,
};

@interface response_10003 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Chat*> *messageArray;
/** The number of items in @c messageArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger messageArray_Count;

/** 分页 */
@property(nonatomic, readwrite, strong, null_resettable) PagePB *pagePb;
/** Test to see if @c pagePb has been set. */
@property(nonatomic, readwrite) BOOL hasPagePb;

@end

#pragma mark - request_12000

typedef AIYOU_G_P_B_ENUM(request_12000_FieldNumber) {
  request_12000_FieldNumber_Message = 1,
};

/**
 * *
 * 发送世界聊天
 **/
@interface request_12000 : AIYOU_G_P_BMessage

/**
 * *
 * Msg.Chat
 **/
@property(nonatomic, readwrite, strong, null_resettable) Chat *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

#pragma mark - response_12000

typedef AIYOU_G_P_B_ENUM(response_12000_FieldNumber) {
  response_12000_FieldNumber_Result = 1,
  response_12000_FieldNumber_MsgId = 2,
  response_12000_FieldNumber_Message = 3,
};

@interface response_12000 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t result;

@property(nonatomic, readwrite, copy, null_resettable) NSString *msgId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

@end

#pragma mark - response_12002

typedef AIYOU_G_P_B_ENUM(response_12002_FieldNumber) {
  response_12002_FieldNumber_Message = 1,
};

/**
 * 接收世界消息
 **/
@interface response_12002 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite, strong, null_resettable) Chat *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

#pragma mark - request_12003

typedef AIYOU_G_P_B_ENUM(request_12003_FieldNumber) {
  request_12003_FieldNumber_StartTime = 1,
  request_12003_FieldNumber_EndTime = 2,
  request_12003_FieldNumber_PagePb = 3,
};

/**
 * *
 * 查询世界聊天历史消息
 **/
@interface request_12003 : AIYOU_G_P_BMessage

/** 会话查询开始时间 */
@property(nonatomic, readwrite) int64_t startTime;

/** 会话查询结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

/** 分页 */
@property(nonatomic, readwrite, strong, null_resettable) PagePB *pagePb;
/** Test to see if @c pagePb has been set. */
@property(nonatomic, readwrite) BOOL hasPagePb;

@end

#pragma mark - response_12003

typedef AIYOU_G_P_B_ENUM(response_12003_FieldNumber) {
  response_12003_FieldNumber_ResultCode = 1,
  response_12003_FieldNumber_ResultMessage = 2,
  response_12003_FieldNumber_MessageArray = 3,
  response_12003_FieldNumber_PagePb = 4,
};

@interface response_12003 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Chat*> *messageArray;
/** The number of items in @c messageArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger messageArray_Count;

/** 分页 */
@property(nonatomic, readwrite, strong, null_resettable) PagePB *pagePb;
/** Test to see if @c pagePb has been set. */
@property(nonatomic, readwrite) BOOL hasPagePb;

@end

#pragma mark - request_13000

typedef AIYOU_G_P_B_ENUM(request_13000_FieldNumber) {
  request_13000_FieldNumber_GuildId = 1,
  request_13000_FieldNumber_Message = 2,
};

/**
 * *
 * 公会聊天
 **/
@interface request_13000 : AIYOU_G_P_BMessage

/** 公会id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *guildId;

@property(nonatomic, readwrite, strong, null_resettable) Chat *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

#pragma mark - response_13000

typedef AIYOU_G_P_B_ENUM(response_13000_FieldNumber) {
  response_13000_FieldNumber_ResultCode = 1,
  response_13000_FieldNumber_ResultMessage = 2,
};

@interface response_13000 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

@end

#pragma mark - response_13001

typedef AIYOU_G_P_B_ENUM(response_13001_FieldNumber) {
  response_13001_FieldNumber_GuildId = 1,
  response_13001_FieldNumber_Message = 2,
};

/**
 * 接收公会聊天消息
 **/
@interface response_13001 : AIYOU_G_P_BMessage

/** 公会id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *guildId;

@property(nonatomic, readwrite, strong, null_resettable) Chat *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

#pragma mark - request_13002

typedef AIYOU_G_P_B_ENUM(request_13002_FieldNumber) {
  request_13002_FieldNumber_GuildId = 1,
  request_13002_FieldNumber_StartTime = 2,
  request_13002_FieldNumber_EndTime = 3,
  request_13002_FieldNumber_PagePb = 4,
};

/**
 * *
 * 拉取公会历史消息
 **/
@interface request_13002 : AIYOU_G_P_BMessage

/** 公会id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *guildId;

/** 会话查询开始时间 */
@property(nonatomic, readwrite) int64_t startTime;

/** 会话查询结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

/** 分页 */
@property(nonatomic, readwrite, strong, null_resettable) PagePB *pagePb;
/** Test to see if @c pagePb has been set. */
@property(nonatomic, readwrite) BOOL hasPagePb;

@end

#pragma mark - response_13002

typedef AIYOU_G_P_B_ENUM(response_13002_FieldNumber) {
  response_13002_FieldNumber_ResultCode = 1,
  response_13002_FieldNumber_ResultMessage = 2,
  response_13002_FieldNumber_MessageArray = 3,
  response_13002_FieldNumber_PagePb = 4,
};

@interface response_13002 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Chat*> *messageArray;
/** The number of items in @c messageArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger messageArray_Count;

/** 分页 */
@property(nonatomic, readwrite, strong, null_resettable) PagePB *pagePb;
/** Test to see if @c pagePb has been set. */
@property(nonatomic, readwrite) BOOL hasPagePb;

@end

#pragma mark - request_14000

typedef AIYOU_G_P_B_ENUM(request_14000_FieldNumber) {
  request_14000_FieldNumber_BtId = 1,
  request_14000_FieldNumber_Message = 2,
};

/**
 * *
 * 组队聊天
 **/
@interface request_14000 : AIYOU_G_P_BMessage

/** 组队id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

@property(nonatomic, readwrite, strong, null_resettable) Chat *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

#pragma mark - response_14000

typedef AIYOU_G_P_B_ENUM(response_14000_FieldNumber) {
  response_14000_FieldNumber_ResultCode = 1,
  response_14000_FieldNumber_ResultMessage = 2,
  response_14000_FieldNumber_MsgId = 3,
};

@interface response_14000 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 消息编号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgId;

@end

#pragma mark - response_14001

typedef AIYOU_G_P_B_ENUM(response_14001_FieldNumber) {
  response_14001_FieldNumber_BtId = 1,
  response_14001_FieldNumber_Message = 2,
};

/**
 * 接收组队消息
 **/
@interface response_14001 : AIYOU_G_P_BMessage

/** 组队id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

@property(nonatomic, readwrite, strong, null_resettable) Chat *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

#pragma mark - request_14002

typedef AIYOU_G_P_B_ENUM(request_14002_FieldNumber) {
  request_14002_FieldNumber_BtId = 1,
  request_14002_FieldNumber_StartTime = 2,
  request_14002_FieldNumber_EndTime = 3,
  request_14002_FieldNumber_PagePb = 4,
};

/**
 * *
 * 拉取组队历史消息
 **/
@interface request_14002 : AIYOU_G_P_BMessage

/** 公会id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

/** 会话查询开始时间 */
@property(nonatomic, readwrite) int64_t startTime;

/** 会话查询结束时间 */
@property(nonatomic, readwrite) int64_t endTime;

/** 分页 */
@property(nonatomic, readwrite, strong, null_resettable) PagePB *pagePb;
/** Test to see if @c pagePb has been set. */
@property(nonatomic, readwrite) BOOL hasPagePb;

@end

#pragma mark - response_14002

typedef AIYOU_G_P_B_ENUM(response_14002_FieldNumber) {
  response_14002_FieldNumber_ResultCode = 1,
  response_14002_FieldNumber_ResultMessage = 2,
  response_14002_FieldNumber_MessageArray = 3,
  response_14002_FieldNumber_PagePb = 4,
};

@interface response_14002 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Chat*> *messageArray;
/** The number of items in @c messageArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger messageArray_Count;

/** 分页 */
@property(nonatomic, readwrite, strong, null_resettable) PagePB *pagePb;
/** Test to see if @c pagePb has been set. */
@property(nonatomic, readwrite) BOOL hasPagePb;

@end

#pragma mark - request_14003

typedef AIYOU_G_P_B_ENUM(request_14003_FieldNumber) {
  request_14003_FieldNumber_Name = 1,
  request_14003_FieldNumber_MembersArray = 2,
};

/**
 * *
 * 创建群组聊天
 **/
@interface request_14003 : AIYOU_G_P_BMessage

/** 群组名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 创建群组时，可以拉其他成员一起组建群组 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *membersArray;
/** The number of items in @c membersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger membersArray_Count;

@end

#pragma mark - response_14003

typedef AIYOU_G_P_B_ENUM(response_14003_FieldNumber) {
  response_14003_FieldNumber_ResultCode = 1,
  response_14003_FieldNumber_ResultMessage = 2,
  response_14003_FieldNumber_BtId = 3,
  response_14003_FieldNumber_Name = 4,
  response_14003_FieldNumber_MembersArray = 5,
};

@interface response_14003 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 群组ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

/** 群组名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 创建群组时，可以拉其他成员一起组建群组 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *membersArray;
/** The number of items in @c membersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger membersArray_Count;

@end

#pragma mark - request_14004

typedef AIYOU_G_P_B_ENUM(request_14004_FieldNumber) {
  request_14004_FieldNumber_BtId = 1,
  request_14004_FieldNumber_MembersArray = 2,
};

/**
 * *
 * 拉人进群组
 **/
@interface request_14004 : AIYOU_G_P_BMessage

/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

/** 被邀请进群组人员ID */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *membersArray;
/** The number of items in @c membersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger membersArray_Count;

@end

#pragma mark - response_14004

typedef AIYOU_G_P_B_ENUM(response_14004_FieldNumber) {
  response_14004_FieldNumber_ResultCode = 1,
  response_14004_FieldNumber_ResultMessage = 2,
  response_14004_FieldNumber_BtId = 3,
  response_14004_FieldNumber_MembersArray = 4,
};

@interface response_14004 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

/** 被邀请进群组人员ID */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *membersArray;
/** The number of items in @c membersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger membersArray_Count;

@end

#pragma mark - request_14005

typedef AIYOU_G_P_B_ENUM(request_14005_FieldNumber) {
  request_14005_FieldNumber_BtId = 1,
};

/**
 * *
 * 退出群组
 **/
@interface request_14005 : AIYOU_G_P_BMessage

/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

@end

#pragma mark - response_14005

typedef AIYOU_G_P_B_ENUM(response_14005_FieldNumber) {
  response_14005_FieldNumber_ResultCode = 1,
  response_14005_FieldNumber_ResultMessage = 2,
  response_14005_FieldNumber_BtId = 3,
};

@interface response_14005 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

@end

#pragma mark - request_14006

typedef AIYOU_G_P_B_ENUM(request_14006_FieldNumber) {
  request_14006_FieldNumber_BtId = 1,
  request_14006_FieldNumber_Member = 2,
};

/**
 * *
 * 踢人,创建人可以踢人
 **/
@interface request_14006 : AIYOU_G_P_BMessage

/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

/** 被踢成员ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *member;

@end

#pragma mark - response_14006

typedef AIYOU_G_P_B_ENUM(response_14006_FieldNumber) {
  response_14006_FieldNumber_ResultCode = 1,
  response_14006_FieldNumber_ResultMessage = 2,
  response_14006_FieldNumber_BtId = 3,
  response_14006_FieldNumber_Member = 4,
};

@interface response_14006 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

/** 被踢成员ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *member;

@end

#pragma mark - request_14007

typedef AIYOU_G_P_B_ENUM(request_14007_FieldNumber) {
  request_14007_FieldNumber_BtId = 1,
};

/**
 * *
 * 解散群组,创建人可以解散
 **/
@interface request_14007 : AIYOU_G_P_BMessage

/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

@end

#pragma mark - response_14007

typedef AIYOU_G_P_B_ENUM(response_14007_FieldNumber) {
  response_14007_FieldNumber_ResultCode = 1,
  response_14007_FieldNumber_ResultMessage = 2,
  response_14007_FieldNumber_BtId = 3,
};

@interface response_14007 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

@end

#pragma mark - request_14008

typedef AIYOU_G_P_B_ENUM(request_14008_FieldNumber) {
  request_14008_FieldNumber_BtId = 1,
};

/**
 * *
 * 查询群组成员
 **/
@interface request_14008 : AIYOU_G_P_BMessage

/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

@end

#pragma mark - response_14008

typedef AIYOU_G_P_B_ENUM(response_14008_FieldNumber) {
  response_14008_FieldNumber_ResultCode = 1,
  response_14008_FieldNumber_ResultMessage = 2,
  response_14008_FieldNumber_BtId = 3,
  response_14008_FieldNumber_MembersArray = 4,
};

@interface response_14008 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

/** 群组成员 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BaseUserInfo*> *membersArray;
/** The number of items in @c membersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger membersArray_Count;

@end

#pragma mark - request_14009

typedef AIYOU_G_P_B_ENUM(request_14009_FieldNumber) {
  request_14009_FieldNumber_BtId = 1,
  request_14009_FieldNumber_Name = 2,
};

/**
 * *
 * 修改群组名称
 **/
@interface request_14009 : AIYOU_G_P_BMessage

/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - response_14009

typedef AIYOU_G_P_B_ENUM(response_14009_FieldNumber) {
  response_14009_FieldNumber_ResultCode = 1,
  response_14009_FieldNumber_ResultMessage = 2,
  response_14009_FieldNumber_BtId = 3,
  response_14009_FieldNumber_Name = 4,
};

@interface response_14009 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - request_14010

/**
 * *
 * 查询我的群组
 **/
@interface request_14010 : AIYOU_G_P_BMessage

@end

#pragma mark - response_14010

typedef AIYOU_G_P_B_ENUM(response_14010_FieldNumber) {
  response_14010_FieldNumber_ResultCode = 1,
  response_14010_FieldNumber_ResultMessage = 2,
  response_14010_FieldNumber_TeamMap = 3,
};

@interface response_14010 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** btId:name 群组ID：群组名称 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *teamMap;
/** The number of items in @c teamMap without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger teamMap_Count;

@end

#pragma mark - response_14011

typedef AIYOU_G_P_B_ENUM(response_14011_FieldNumber) {
  response_14011_FieldNumber_BtId = 1,
  response_14011_FieldNumber_From = 2,
  response_14011_FieldNumber_ToListArray = 3,
};

/**
 * *
 * 邀请进群通知。谁邀请了谁进群。发给所有群成员
 *
 * *
 **/
@interface response_14011 : AIYOU_G_P_BMessage

/** 群组ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

/** 邀请者 */
@property(nonatomic, readwrite, strong, null_resettable) BaseUserInfo *from;
/** Test to see if @c from has been set. */
@property(nonatomic, readwrite) BOOL hasFrom;

/** 被邀请者集合 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BaseUserInfo*> *toListArray;
/** The number of items in @c toListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger toListArray_Count;

@end

#pragma mark - response_14012

typedef AIYOU_G_P_B_ENUM(response_14012_FieldNumber) {
  response_14012_FieldNumber_BtId = 1,
  response_14012_FieldNumber_Flag = 2,
  response_14012_FieldNumber_From = 3,
  response_14012_FieldNumber_To = 4,
};

/**
 * *
 * 退群，踢人通知
 **/
@interface response_14012 : AIYOU_G_P_BMessage

/** 群组ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

/** true 主动退群，false 被踢 */
@property(nonatomic, readwrite) BOOL flag;

/** 踢人者。如果是主动退群，则为空 */
@property(nonatomic, readwrite, strong, null_resettable) BaseUserInfo *from;
/** Test to see if @c from has been set. */
@property(nonatomic, readwrite) BOOL hasFrom;

/** 被踢者，或主动退群者 */
@property(nonatomic, readwrite, strong, null_resettable) BaseUserInfo *to;
/** Test to see if @c to has been set. */
@property(nonatomic, readwrite) BOOL hasTo;

@end

#pragma mark - response_14013

typedef AIYOU_G_P_B_ENUM(response_14013_FieldNumber) {
  response_14013_FieldNumber_BtId = 1,
};

/**
 * *
 * 群组解散通知
 **/
@interface response_14013 : AIYOU_G_P_BMessage

/** 群组ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

@end

#pragma mark - response_14014

typedef AIYOU_G_P_B_ENUM(response_14014_FieldNumber) {
  response_14014_FieldNumber_BtId = 1,
  response_14014_FieldNumber_From = 2,
  response_14014_FieldNumber_Name = 3,
};

/**
 * *
 * 修改群名通知
 **/
@interface response_14014 : AIYOU_G_P_BMessage

/** 群组ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

/** 修改群名称者 */
@property(nonatomic, readwrite, strong, null_resettable) BaseUserInfo *from;
/** Test to see if @c from has been set. */
@property(nonatomic, readwrite) BOOL hasFrom;

/** 新的群名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - request_14015

typedef AIYOU_G_P_B_ENUM(request_14015_FieldNumber) {
  request_14015_FieldNumber_BtId = 1,
};

/**
 * 加入群组
 **/
@interface request_14015 : AIYOU_G_P_BMessage

/** 群组ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

@end

#pragma mark - response_14015

typedef AIYOU_G_P_B_ENUM(response_14015_FieldNumber) {
  response_14015_FieldNumber_ResultCode = 1,
  response_14015_FieldNumber_ResultMessage = 2,
  response_14015_FieldNumber_BtId = 3,
};

@interface response_14015 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 群组ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *btId;

@end

#pragma mark - request_15000

@interface request_15000 : AIYOU_G_P_BMessage

@end

#pragma mark - response_15000

typedef AIYOU_G_P_B_ENUM(response_15000_FieldNumber) {
  response_15000_FieldNumber_ResultCode = 1,
  response_15000_FieldNumber_ResultMessage = 2,
  response_15000_FieldNumber_HistoryMessage = 3,
};

@interface response_15000 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 离线消息,用户code对应响应未读消息 */
@property(nonatomic, readwrite, strong, null_resettable) AIYOU_G_P_BStringInt32Dictionary *historyMessage;
/** The number of items in @c historyMessage without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger historyMessage_Count;

@end

#pragma mark - request_15001

typedef AIYOU_G_P_B_ENUM(request_15001_FieldNumber) {
  request_15001_FieldNumber_TicketId = 1,
  request_15001_FieldNumber_ReportType = 2,
};

@interface request_15001 : AIYOU_G_P_BMessage

/** 被举报人ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ticketId;

@property(nonatomic, readwrite) request_15001_ReportType reportType;

@end

/**
 * Fetches the raw value of a @c request_15001's @c reportType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t request_15001_ReportType_RawValue(request_15001 *message);
/**
 * Sets the raw value of an @c request_15001's @c reportType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setrequest_15001_ReportType_RawValue(request_15001 *message, int32_t value);

#pragma mark - response_15001

typedef AIYOU_G_P_B_ENUM(response_15001_FieldNumber) {
  response_15001_FieldNumber_ResultCode = 1,
  response_15001_FieldNumber_ResultMessage = 2,
  response_15001_FieldNumber_TicketId = 3,
};

@interface response_15001 : AIYOU_G_P_BMessage

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultMessage;

/** 被举报人ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ticketId;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
